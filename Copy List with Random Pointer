/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        Node temp=head;
        if(head==null)
            return null;
        while(temp!=null){
            Node dummy=new Node(temp.val);
            dummy.next=temp.next;
            temp.next=dummy;
            temp=temp.next.next;
        }
        temp=head;
        Node dummy=head.next;
        while(temp!=null){
            temp.next.random=(temp.random!=null)?temp.random.next:null;
            temp=temp.next.next;
        }
        Node d=head.next;
        temp=head;
        while(temp!=null){
            temp.next=temp.next.next;
            d.next=(d.next!=null)?d.next.next:null;
            temp=temp.next;
            d=d.next;
        }
        return dummy;
    }
}
