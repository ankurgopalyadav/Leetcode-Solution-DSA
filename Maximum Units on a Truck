class Pairs implements Comparable<Pairs>{
    int first;
    int second;
    Pairs(int first,int second){
        this.first=first;
        this.second=second;
    }
    public int compareTo(Pairs p){
        if(this.second>p.second)return -1;
        else if(this.second<p.second)return 1;
        else return 0;
    }
    
}
class Solution {
    public int maximumUnits(int[][] boxTypes, int truckSize) {
        ArrayList<Pairs> v=new ArrayList<>();
        for(int i=0;i<boxTypes.length;i++){
            v.add(new Pairs(boxTypes[i][0],boxTypes[i][1]));
        }
        Collections.sort(v);
        int i=0;
        int ans=0;
        while(i<boxTypes.length&&truckSize>0){
            if(v.get(i).first>truckSize){
                ans+=truckSize*v.get(i).second;
                truckSize=0;
            }
            else{
                ans+=v.get(i).second*v.get(i).first;
                truckSize-=v.get(i).first;
            }
            i++;
        }
        return ans;
    }
}
