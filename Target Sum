class Solution {
    public int findTargetSumWays(int[] arr, int d) {
     int sum=0;
        for(int i:arr)sum+=i;
        if(((sum-d)%2)!=0)return 0;
        if(sum-d<0)return 0;
        int[][] dp=new int[arr.length][((sum-d)/2)+1];
        for(int[] r:dp)Arrays.fill(r,-1);
        return solve(arr.length-1,(sum-d)/2,arr,dp);
	}
    public static int solve(int ind,int k,int[] nums,int[][] dp){
        if(ind==0){
            if(k==0&&nums[ind]==0)return 2;
            if(k==0||nums[ind]==k)return 1;
            return 0;
        }
        if(dp[ind][k]!=-1)return dp[ind][k];
        int n=solve(ind-1,k,nums,dp);
        int t=0;
        if(nums[ind]<=k)t=solve(ind-1,k-nums[ind],nums,dp);
        return dp[ind][k]=(t+n);
    }
}
